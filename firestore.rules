rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function signedIn() { return request.auth != null; }
    function isAdmin() { return signedIn() && request.auth.token.admin == true; }
    function isDoctor() { return signedIn() && request.auth.token.role == 'doctor'; }
    function isSelf(uid) { return signedIn() && request.auth.uid == uid; }

    // Users collection for storing user profiles
    match /users/{uid} {
      allow read, write: if isSelf(uid) || isAdmin();
      allow create: if signedIn() && request.auth.uid == uid;
    }

    // Test collection for connection testing
    match /test/{document} {
      allow read, write: if true;
    }

    match /patients/{uid} {
      allow read, write: if isSelf(uid) || isAdmin();
    }

    match /doctors/{uid} {
      allow read: if isSelf(uid) || isAdmin();
      allow write: if isSelf(uid) || isAdmin();
    }

    match /appointments/{id} {
      allow create: if signedIn() && request.resource.data.patientId == request.auth.uid;
      allow read: if isAdmin()
                || (signedIn() && resource.data.patientId == request.auth.uid)
                || (isDoctor() && resource.data.doctorId == request.auth.uid);
      allow update, delete: if isAdmin()
                || (signedIn() && resource.data.patientId == request.auth.uid)
                || (isDoctor() && resource.data.doctorId == request.auth.uuid);
    }

    // Temporary: Allow all access during development (REMOVE IN PRODUCTION!)
    match /{document=**} {
      allow read, write: if true;
    }
  }
}
